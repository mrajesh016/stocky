swagger: '2.0'
info:
  title: Stocky
  description: Simple Stock Service
  version: 1.0.0
  contact:
    email: rajesh.cseiitkgp@gmail.com
host: 'localhost:8080'
basePath: /v1
schemes:
- https

produces:
- application/json

securityDefinitions:
  basicAuth:
    type: basic

paths:
  /api/stocks/:
    get:
      tags:
      - stocks
      summary: List of all of stocks
      security:
      - basicAuth: []
      operationId: getStocksList
      parameters:
      - in: query
        name: page
        description: 0 based page index.
        type: integer
        required: false
        minimum: 0
        default: 0

      - in: query
        name: size
        description: size of the page.
        type: integer
        required: false
        minimum: 1
        maximum: 100
        default: 10
      responses:
        '200':
          description: Successful response with pagination.
          schema:
            $ref: '#/definitions/StockListResponse'
        '401':
          description: User is not Authorized, Missing/Incorrect credentials.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: You don't have the permission on this resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Requested page is out of bounds.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorResponse'

    post:
      tags:
      - stocks
      summary: Create a stock
      security:
      - basicAuth: []
      operationId: createStock
      consumes:
      - application/json
      parameters:
      - in: body
        name: StockRequest
        description: Stock to create
        schema:
          $ref: '#/definitions/CreateStockRequestDTO'
      responses:
        '201':
          description: Stock Created Successfully
          schema:
            $ref: '#/definitions/StockDetailResponse'
        '400':
          description: Incorrect/Corrupt request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: User is not Authorized, Missing/Incorrect credentials.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: You don't have the permission on this resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/api/stocks/{stockId}':
    get:
      tags:
      - stocks
      summary: Returns Stock by ID
      security:
      - basicAuth: []
      operationId: getStockById
      parameters:
      - in: path
        name: stockId
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Stock was successfully found
          schema:
            $ref: '#/definitions/StockDetailResponse'
        '401':
          description: User is not Authorized, Missing/Incorrect credentials.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: You don't have the permission on this resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: No stock entity exists for given stockId.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
      - stocks
      summary: Update a stock
      security:
      - basicAuth: []
      operationId: updateStockById
      consumes:
      - application/json
      parameters:
      - in: path
        name: stockId
        required: true
        type: integer
        format: int64
      - in: body
        name: StockRequest
        description: Stock to create
        schema:
          $ref: '#/definitions/UpdateStockRequestDTO'
      responses:
        '200':
          description: Stock was successfully updated
          schema:
            $ref: '#/definitions/StockDetailResponse'
        '400':
          description: Incorrect/Corrupt request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: User is not Authorized, Missing/Incorrect credentials.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: You don't have the permission on this resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: No stock entity exists for given stockId.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
      - stocks
      summary: Delete a stock
      security:
      - basicAuth: []
      operationId: deleteStockById
      parameters:
      - in: path
        name: stockId
        required: true
        type: integer
        format: int64
      responses:
        '204':
          description: Stock was successfully deleted.
        '401':
          description: Your user is not Authorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: You don't have the permission on this resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: No stock entity exists for given stockId.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:

  StockDetailResponse:
    description: Describes details of a stock entity.
    properties:
      stockId:
        type: integer
        format: int64
        description: Unique identifier of a stock entity.
        example: 98232913455
      stockName:
        type: string
        description: Name of the stock.
        example: payconiqStock
      currentPrice:
        type: number
        format: double
        description: Current price of the stock.
        example: 16.6
      lastUpdated:
        type: string
        format: date-time
        description: Last updated time of the stock.
        example: '2019-06-25T17:32:28Z'

  StockListResponse:
    description: List of stocks along with page index and its size.
    properties:
      stocksDetailList:
        type: array
        items:
          $ref: '#/definitions/StockDetailResponse'
      size:
        type: integer
        minimum: 0
        description: current page size.
      number:
        type: integer
        description: current page number.
      totalPages:
        type: integer
        description: total pages.
      totalElements:
        type: integer
        format: int64
        description: total elements.

  CreateStockRequestDTO:
    description: Request object to create a new stock entity.
    properties:
      stockName:
        type: string
        description: Name of the stock.
        example: payconiqStock
      currentPrice:
        type: number
        format: double
        description: Current price of the stock.
        example: 16.6
    required:
    - stockName
    - currentPrice

  UpdateStockRequestDTO:
    description: Request object to update a stock entity.
    properties:
      currentPrice:
        type: number
        format: double
        description: Current price of the stock.
        example: 16.6
    required:
    - currentPrice

  ErrorResponse:
    description: Error responses description.
    properties:
      status:
        description: Error code.
        type: integer
      error:
        description: Error description in human readble format.
        type: string
      message:
        description: Reason the error occured.
        type: string
        minLength: 1
      timestamp:
        description: Error timestamp.
        type: string
        format: date-time
      path:
        description: Path/Uri to invalid resource.
        type: string
    required:
    - code
    - message
    - timestamp
